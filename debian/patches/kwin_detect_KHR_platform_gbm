Index: kwin-5.11.4/plugins/platforms/drm/egl_gbm_backend.cpp
===================================================================
--- kwin-5.11.4.orig/plugins/platforms/drm/egl_gbm_backend.cpp
+++ kwin-5.11.4/plugins/platforms/drm/egl_gbm_backend.cpp
@@ -90,9 +90,12 @@ bool EglGbmBackend::initializeEgl()
     // Use eglGetPlatformDisplayEXT() to get the display pointer
     // if the implementation supports it.
     if (display == EGL_NO_DISPLAY) {
+        const bool hasMesaGBM = hasClientExtension(QByteArrayLiteral("EGL_MESA_platform_gbm"));
+        const bool hasKHRGBM = hasClientExtension(QByteArrayLiteral("EGL_KHR_platform_gbm"));
+
         if (!hasClientExtension(QByteArrayLiteral("EGL_EXT_platform_base")) ||
-                !hasClientExtension(QByteArrayLiteral("EGL_MESA_platform_gbm"))) {
-            setFailed("EGL_EXT_platform_base and/or EGL_MESA_platform_gbm missing");
+                (!hasMesaGBM && !hasKHRGBM)) {
+            setFailed("missing one or more extensions between EGL_EXT_platform_base,  EGL_MESA_platform_gbm, EGL_KHR_platform_gbm");
             return false;
         }
 
@@ -103,7 +106,12 @@ bool EglGbmBackend::initializeEgl()
         }
         m_backend->setGbmDevice(device);
 
-        display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_MESA, device, nullptr);
+        if (hasMesaGBM) {
+            display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_MESA, device, nullptr);
+        //khr gbm
+        } else {
+            display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_KHR, device, nullptr);
+        }
     }
 
     if (display == EGL_NO_DISPLAY)
Index: kwin-5.11.4/plugins/platforms/virtual/egl_gbm_backend.cpp
===================================================================
--- kwin-5.11.4.orig/plugins/platforms/virtual/egl_gbm_backend.cpp
+++ kwin-5.11.4/plugins/platforms/virtual/egl_gbm_backend.cpp
@@ -102,22 +102,35 @@ bool EglGbmBackend::initializeEgl()
     // Use eglGetPlatformDisplayEXT() to get the display pointer
     // if the implementation supports it.
     if (display == EGL_NO_DISPLAY) {
+        const bool hasMesaGBM = hasClientExtension(QByteArrayLiteral("EGL_MESA_platform_gbm"));
+        const bool hasKHRGBM = hasClientExtension(QByteArrayLiteral("EGL_KHR_platform_gbm"));
+
         if (!hasClientExtension(QByteArrayLiteral("EGL_EXT_platform_base")) ||
-                !hasClientExtension(QByteArrayLiteral("EGL_MESA_platform_gbm"))) {
-            setFailed("EGL_EXT_platform_base and/or EGL_MESA_platform_gbm missing");
+                (!hasMesaGBM && !hasKHRGBM)) {
+            setFailed("missing one or more extensions between EGL_EXT_platform_base,  EGL_MESA_platform_gbm, EGL_KHR_platform_gbm");
             return false;
         }
 
 #if HAVE_GBM
         initGbmDevice();
         if (auto device = m_backend->gbmDevice()) {
-            display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_MESA, device, nullptr);
+            if (hasMesaGBM) {
+                display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_MESA, device, nullptr);
+            //khr gbm
+            } else {
+                display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_KHR, device, nullptr);
+            }
         }
 #endif
 
         if (display == EGL_NO_DISPLAY) {
             qCWarning(KWIN_VIRTUAL) << "Failed to create EGLDisplay through GBM device, trying with default device";
-            display = eglGetPlatformDisplay(EGL_PLATFORM_GBM_MESA, EGL_DEFAULT_DISPLAY, nullptr);
+            if (hasMesaGBM) {
+                display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_MESA, EGL_DEFAULT_DISPLAY, nullptr);
+            //khr gbm
+            } else {
+                display = eglGetPlatformDisplayEXT(EGL_PLATFORM_GBM_KHR, EGL_DEFAULT_DISPLAY, nullptr);
+            }
         }
     }
 
